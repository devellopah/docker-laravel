version: '3'
services:

  #PHP Service
  app:
    build:
      context: .
      dockerfile: app.dockerfile
    image: devellopah/php
    container_name: app
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    working_dir: /var/www/html
    volumes:
      - ./src:/var/www/html:delegated
      - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - laravel
  #Nginx Service
  webserver:
    image: nginx:stable-alpine
    container_name: webserver
    restart: unless-stopped
    tty: true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./src:/var/www/html:delegated
      - ./nginx/conf.d/:/etc/nginx/conf.d/
    depends_on:
      - app
      - db
      - phpmyadmin
      - mailhog
    networks:
      - laravel

  #MySQL Service
  db:
    image: mysql:5.7.29
    container_name: db
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: laravel
      MYSQL_ROOT_PASSWORD: iamroot
      MYSQL_USER: laravel
      MYSQL_PASSWORD: laravel
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - dbdata:/var/lib/mysql/
      - ./mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - laravel

  #PhpMyAdmin Service
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: phpmyadmin
    restart: unless-stopped
    ports:
      - "8080:80"
    environment:
      - PMA_HOST=db
      - PMA_USER=laravel
      - PMA_PASSWORD=laravel
    depends_on:
      - db
    networks:
      - laravel

  #Mailhog Service
  mailhog:
    image: mailhog/mailhog:latest
    container_name: mailhog
    ports:
      - 1025:1025 # smtp server
      - 8025:8025 # web ui
    networks:
      - laravel

  npm:
    image: node:13.7
    container_name: npm
    volumes:
      - ./src:/var/www/html
    ports:
      - 3000:3000
      - 3001:3001
    working_dir: /var/www/html
    entrypoint: ['npm']
    networks:
      - laravel

  # composer:
  #   build:
  #     context: .
  #     dockerfile: composer.dockerfile
  #   image: devellopah/composer
  #   container_name: composer
  #   volumes:
  #     - ./src:/var/www/html
  #   working_dir: /var/www/html
  #   depends_on:
  #     - app
  #   user: laravel
  #   entrypoint: ['composer', '--ignore-platform-reqs']
  #   networks:
  #     - laravel

  # artisan:
  #   build:
  #     context: .
  #     dockerfile: app.dockerfile
  #   image: devellopah/php
  #   container_name: artisan
  #   volumes:
  #     - ./src:/var/www/html:delegated
  #   depends_on:
  #     - db
  #   working_dir: /var/www/html
  #   user: laravel
  #   entrypoint: ['php', '/var/www/html/artisan']
  #   networks:
  #     - laravel

#Docker Networks
networks:
  laravel:
    driver: bridge
#Volumes
volumes:
  dbdata:
    driver: local